#pragma once

/*
 * Keycodes based on HID Keyboard/Keypad Usage Page (0x07) plus media keys
 * from Generic Desktop Page (0x01) and Consumer Page (0x0C)
 *
 * See https://web.archive.org/web/20060218214400/http://www.usb.org/developers/devclass_docs/Hut1_12.pdf
 * or http://www.usb.org/developers/hidpage/Hut1_12v2.pdf (older)
 */

#define IS_ANY_KC(code) (KC_A <= (code) && (code) <= 0xFF)
#define IS_ERROR_KC(code) (KC_ROLL_OVER <= (code) && (code) <= KC_UNDEFINED)
#define IS_KEY_KC(code) (KC_A <= (code) && (code) <= KC_EXSEL)
#define IS_MOD_KC(code) (KC_LEFT_CTRL <= (code) && (code) <= KC_RIGHT_GUI)

#define MOD_INDEX(code) ((code) & 0b111)
#define MOD_BIT(code) (1 << MOD_INDEX(code))

/* Transparent */
#define KC_TRANSPARENT 0x01
#define KC_TRNS KC_TRANSPARENT

/* Punctuation */
#define KC_ENT  KC_ENTER
#define KC_ESC  KC_ESCAPE
#define KC_BSPC KC_BACKSPACE
#define KC_SPC  KC_SPACE
#define KC_MINS KC_MINUS
#define KC_EQL  KC_EQUAL
#define KC_LBRC KC_LEFT_BRACKET
#define KC_RBRC KC_RIGHT_BRACKET
#define KC_BSLS KC_BACKSLASH
#define KC_NUHS KC_NONUS_HASH
#define KC_SCLN KC_SEMICOLON
#define KC_QUOT KC_QUOTE
#define KC_GRV  KC_GRAVE
#define KC_COMM KC_COMMA
#define KC_SLSH KC_SLASH
#define KC_NUBS KC_NONUS_BACKSLASH

/* Lock Keys */
#define KC_CAPS KC_CAPS_LOCK
#define KC_SCRL KC_SCROLL_LOCK
#define KC_NUM  KC_NUM_LOCK
#define KC_LCAP KC_LOCKING_CAPS_LOCK
#define KC_LNUM KC_LOCKING_NUM_LOCK
#define KC_LSCR KC_LOCKING_SCROLL_LOCK

/* Commands */
#define KC_PSCR KC_PRINT_SCREEN
#define KC_PAUS KC_PAUSE
#define KC_BRK  KC_PAUSE
#define KC_INS  KC_INSERT
#define KC_PGUP KC_PAGE_UP
#define KC_DEL  KC_DELETE
#define KC_PGDN KC_PAGE_DOWN
#define KC_RGHT KC_RIGHT
#define KC_APP  KC_APPLICATION
#define KC_EXEC KC_EXECUTE
#define KC_SLCT KC_SELECT
#define KC_AGIN KC_AGAIN
#define KC_PSTE KC_PASTE
#define KC_ERAS KC_ALTERNATE_ERASE
#define KC_SYRQ KC_SYSTEM_REQUEST
#define KC_CNCL KC_CANCEL
#define KC_CLR  KC_CLEAR
#define KC_PRIR KC_PRIOR
#define KC_RETN KC_RETURN
#define KC_SEPR KC_SEPARATOR
#define KC_CLAG KC_CLEAR_AGAIN
#define KC_CRSL KC_CRSEL
#define KC_EXSL KC_EXSEL

/* Keypad */
#define KC_PSLS KC_KP_SLASH
#define KC_PAST KC_KP_ASTERISK
#define KC_PMNS KC_KP_MINUS
#define KC_PPLS KC_KP_PLUS
#define KC_PENT KC_KP_ENTER
#define KC_P1   KC_KP_1
#define KC_P2   KC_KP_2
#define KC_P3   KC_KP_3
#define KC_P4   KC_KP_4
#define KC_P5   KC_KP_5
#define KC_P6   KC_KP_6
#define KC_P7   KC_KP_7
#define KC_P8   KC_KP_8
#define KC_P9   KC_KP_9
#define KC_P0   KC_KP_0
#define KC_PDOT KC_KP_DOT
#define KC_PEQL KC_KP_EQUAL
#define KC_PCMM KC_KP_COMMA

/* Language Specific */
#define KC_INT1 KC_INTERNATIONAL_1
#define KC_INT2 KC_INTERNATIONAL_2
#define KC_INT3 KC_INTERNATIONAL_3
#define KC_INT4 KC_INTERNATIONAL_4
#define KC_INT5 KC_INTERNATIONAL_5
#define KC_INT6 KC_INTERNATIONAL_6
#define KC_INT7 KC_INTERNATIONAL_7
#define KC_INT8 KC_INTERNATIONAL_8
#define KC_INT9 KC_INTERNATIONAL_9
#define KC_LNG1 KC_LANGUAGE_1
#define KC_LNG2 KC_LANGUAGE_2
#define KC_LNG3 KC_LANGUAGE_3
#define KC_LNG4 KC_LANGUAGE_4
#define KC_LNG5 KC_LANGUAGE_5
#define KC_LNG6 KC_LANGUAGE_6
#define KC_LNG7 KC_LANGUAGE_7
#define KC_LNG8 KC_LANGUAGE_8
#define KC_LNG9 KC_LANGUAGE_9

/* Modifiers */
#define KC_LCTL KC_LEFT_CTRL
#define KC_LSFT KC_LEFT_SHIFT
#define KC_LALT KC_LEFT_ALT
#define KC_LOPT KC_LEFT_ALT
#define KC_LGUI KC_LEFT_GUI
#define KC_LCMD KC_LEFT_GUI
#define KC_LWIN KC_LEFT_GUI
#define KC_RCTL KC_RIGHT_CTRL
#define KC_RSFT KC_RIGHT_SHIFT
#define KC_RALT KC_RIGHT_ALT
#define KC_ALGR KC_RIGHT_ALT
#define KC_ROPT KC_RIGHT_ALT
#define KC_RGUI KC_RIGHT_GUI
#define KC_RCMD KC_RIGHT_GUI
#define KC_RWIN KC_RIGHT_GUI

/* Keyboard/Keypad Page (0x07) */
enum hid_keyboard {
	KC_NO = 0x00,
	KC_ROLL_OVER,
	KC_POST_FAIL,
	KC_UNDEFINED,
	KC_A,
	KC_B,
	KC_C,
	KC_D,
	KC_E,
	KC_F,
	KC_G,
	KC_H,
	KC_I,
	KC_J,
	KC_K,
	KC_L,
	KC_M, // 0x10
	KC_N,
	KC_O,
	KC_P,
	KC_Q,
	KC_R,
	KC_S,
	KC_T,
	KC_U,
	KC_V,
	KC_W,
	KC_X,
	KC_Y,
	KC_Z,
	KC_1,
	KC_2,
	KC_3, // 0x20
	KC_4,
	KC_5,
	KC_6,
	KC_7,
	KC_8,
	KC_9,
	KC_0,
	KC_ENTER,
	KC_ESCAPE,
	KC_BACKSPACE,
	KC_TAB,
	KC_SPACE,
	KC_MINUS,
	KC_EQUAL,
	KC_LEFT_BRACKET,
	KC_RIGHT_BRACKET, // 0x30
	KC_BACKSLASH,
	KC_NONUS_HASH,
	KC_SEMICOLON,
	KC_QUOTE,
	KC_GRAVE,
	KC_COMMA,
	KC_DOT,
	KC_SLASH,
	KC_CAPS_LOCK,
	KC_F1,
	KC_F2,
	KC_F3,
	KC_F4,
	KC_F5,
	KC_F6,
	KC_F7, // 0x40
	KC_F8,
	KC_F9,
	KC_F10,
	KC_F11,
	KC_F12,
	KC_PRINT_SCREEN,
	KC_SCROLL_LOCK,
	KC_PAUSE,
	KC_INSERT,
	KC_HOME,
	KC_PAGE_UP,
	KC_DELETE,
	KC_END,
	KC_PAGE_DOWN,
	KC_RIGHT,
	KC_LEFT, // 0x50
	KC_DOWN,
	KC_UP,
	KC_NUM_LOCK,
	KC_KP_SLASH,
	KC_KP_ASTERISK,
	KC_KP_MINUS,
	KC_KP_PLUS,
	KC_KP_ENTER,
	KC_KP_1,
	KC_KP_2,
	KC_KP_3,
	KC_KP_4,
	KC_KP_5,
	KC_KP_6,
	KC_KP_7,
	KC_KP_8, // 0x60
	KC_KP_9,
	KC_KP_0,
	KC_KP_DOT,
	KC_NONUS_BACKSLASH,
	KC_APPLICATION,
	KC_KB_POWER,
	KC_KP_EQUAL,
	KC_F13,
	KC_F14,
	KC_F15,
	KC_F16,
	KC_F17,
	KC_F18,
	KC_F19,
	KC_F20,
	KC_F21, // 0x70
	KC_F22,
	KC_F23,
	KC_F24,
	KC_EXECUTE,
	KC_HELP,
	KC_MENU,
	KC_SELECT,
	KC_STOP,
	KC_AGAIN,
	KC_UNDO,
	KC_CUT,
	KC_COPY,
	KC_PASTE,
	KC_FIND,
	KC_KB_MUTE,
	KC_KB_VOLUME_UP, // 0x80
	KC_KB_VOLUME_DOWN,
	KC_LOCKING_CAPS_LOCK,
	KC_LOCKING_NUM_LOCK,
	KC_LOCKING_SCROLL_LOCK,
	KC_KP_COMMA,
	KC_KP_EQUAL_AS400,
	KC_INTERNATIONAL_1,
	KC_INTERNATIONAL_2,
	KC_INTERNATIONAL_3,
	KC_INTERNATIONAL_4,
	KC_INTERNATIONAL_5,
	KC_INTERNATIONAL_6,
	KC_INTERNATIONAL_7,
	KC_INTERNATIONAL_8,
	KC_INTERNATIONAL_9,
	KC_LANGUAGE_1, // 0x90
	KC_LANGUAGE_2,
	KC_LANGUAGE_3,
	KC_LANGUAGE_4,
	KC_LANGUAGE_5,
	KC_LANGUAGE_6,
	KC_LANGUAGE_7,
	KC_LANGUAGE_8,
	KC_LANGUAGE_9,
	KC_ALTERNATE_ERASE,
	KC_SYSTEM_REQUEST,
	KC_CANCEL,
	KC_CLEAR,
	KC_PRIOR,
	KC_RETURN,
	KC_SEPARATOR,
	KC_OUT, // 0xA0
	KC_OPER,
	KC_CLEAR_AGAIN,
	KC_CRSEL,
	KC_EXSEL,

#if 0
	/* These keycodes are present in the HID spec, but are
	 * nonfunctional on modern OSes */
	
	KC_KP_00				= 0xB0,
	KC_KP_000,
	KC_THOUSANDS_SEPARATOR,
	KC_DECIMAL_SEPARATOR,
	KC_CURRENCY_UNIT,
	KC_CURRENCY_SUB_UNIT,
	KC_KP_LEFT_PARENTHESIS,
	KC_KP_RIGHT_PARENTHESIS,
	KC_KP_LEFT_BRACE,
	KC_KP_RIGHT_BRACE,
	KC_KP_TAB,
	KC_KP_BACKSPACE,
	KC_KP_A,
	KC_KP_B,
	KC_KP_C,
	KC_KP_D,
	KC_KP_E,				//0xC0
	KC_KP_F,
	KC_KP_XOR,
	KC_KP_HAT,
	KC_KP_PERCENT,
	KC_KP_LESS_THAN,
	KC_KP_GREATER_THAN,
	KC_KP_AND,
	KC_KP_LAZY_AND,
	KC_KP_OR,
	KC_KP_LAZY_OR,
	KC_KP_COLON,
	KC_KP_HASH,
	KC_KP_SPACE,
	KC_KP_AT,
	KC_KP_EXCLAMATION,
	KC_KP_MEM_STORE,		//0xD0
	KC_KP_MEM_RECALL,
	KC_KP_MEM_CLEAR,
	KC_KP_MEM_ADD,
	KC_KP_MEM_SUB,
	KC_KP_MEM_MUL,
	KC_KP_MEM_DIV,
	KC_KP_PLUS_MINUS,
	KC_KP_CLEAR,
	KC_KP_CLEAR_ENTRY,
	KC_KP_BINARY,
	KC_KP_OCTAL,
	KC_KP_DECIMAL,
	KC_KP_HEXADECIMAL,
#endif

	/* Modifiers */
	KC_LEFT_CTRL = 0xE0,
	KC_LEFT_SHIFT,
	KC_LEFT_ALT,
	KC_LEFT_GUI,
	KC_RIGHT_CTRL,
	KC_RIGHT_SHIFT,
	KC_RIGHT_ALT,
	KC_RIGHT_GUI
};
